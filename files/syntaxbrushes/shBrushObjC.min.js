!function(){typeof require!="undefined"?SyntaxHighlighter=require("shCore").SyntaxHighlighter:null;function Brush(){var datatypes="char bool BOOL double float int long short id void";var keywords="IBAction IBOutlet SEL YES NO readwrite readonly nonatomic NULL"+" super self copy if else for in enum while typedef switch case return"+" const static retain TRUE FALSE ON OFF";this.regexList=[{regex:new RegExp(this.getKeywords(datatypes),"gm"),css:"color2"},{regex:new RegExp(this.getKeywords(keywords),"gm"),css:"color2"},{regex:new RegExp("@\\w+\\b","g"),css:"color2"},{regex:new RegExp("[: ]nil","g"),css:"color2"},{regex:new RegExp(" \\w+(?=[:\\]])","g"),css:"variable"},{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:"comments"},{regex:SyntaxHighlighter.regexLib.multiLineCComments,css:"comments"},{regex:new RegExp('@"[^"]*"',"gm"),css:"string"},{regex:new RegExp("\\d","gm"),css:"string"},{regex:new RegExp("^ *#.*","gm"),css:"preprocessor"},{regex:new RegExp("\\w+(?= \\*)","g"),css:"keyword"},{regex:new RegExp("\\b[A-Z]\\w+\\b(?=[ ,;])","gm"),css:"keyword"},{regex:new RegExp("\\.\\w+","g"),css:"constants"}]}Brush.prototype=new SyntaxHighlighter.Highlighter;Brush.aliases=["oc","objc"];SyntaxHighlighter.brushes.ObjC=Brush;typeof exports!="undefined"?exports.Brush=Brush:null}();